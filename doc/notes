[ TODOS ]
. device: save the N>1 open access points. if connection fails on
one, try another
. device: merge Linux support

[ esp8266 ]
https://github.com/pfalcon/esp-open-sdk
https://github.com/esp8266/esp8266-wiki/wiki/Toolchain
https://github.com/esp8266/source-code-examples
http://esp8266.ru/download/esp8266-doc/ESP8266_IoT_SDK_Programming%20Guide_v0.9.1.pdf
https://cdn.sparkfun.com/datasheets/Wireless/WiFi/ESP8266ModuleV1.pdf
http://hackaday.com/2015/03/18/how-to-directly-program-an-inexpensive-esp8266-wifi-module/
https://espressif.com/en/support/explore/sample-codes

[ DNS tunnelling ]
in practice, active portals (FreeWifi) block DNS request if they
do not target the DNS server IP passed during the DHCP response.
So, it is not possible to escape without having first a DHCP
session, which means a full UDP stack.

[ userspace networking ]
https://austinmarton.wordpress.com/2011/09/14/sending-raw-ethernet-packets-from-a-specific-interface-in-c-on-linux/
https://austinmarton.wordpress.com/2012/06/03/receiving-raw-packets-in-linux-without-pcap/
http://www.nongnu.org/lwip/2_0_0/index.html

[ related hardware ]
http://digistump.com/oak/

[ related projects ]
http://hackaday.com/2016/08/07/getting-the-data-out-over-other-peoples-wifi/

[ wifi based geolocation ]
https://developers.google.com/maps/documentation/geolocation/intro
https://radiocells.org/
https://openwifi.su/?lang=en
https://www.mylnikov.org/archives/1170
https://wigle.net/
https://github.com/nfvs/wigle-api
https://code.activestate.com/recipes/578637-wigle-wifi-geolocation/

[ mapping ]
gpx file format, https://en.wikipedia.org/wiki/GPS_Exchange_Format
kml file format, gpx equivalent for google earth
http://www.gpsvisualizer.com/